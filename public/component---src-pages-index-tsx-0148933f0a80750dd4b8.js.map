{"version":3,"sources":["webpack:///./src/components/hero.tsx","webpack:///./src/components/headerText.tsx","webpack:///./src/pages/index.tsx"],"names":["HeroContainer","styled","div","Hero","props","HeaderTextContainer","HeaderText","React","createElement","type","children","ReactGA","initialize","process","MainContainer","MainContent","className","IndexPage","useEffect","pageview","window","location","pathname","search","title","description","lang","meta","keywords"],"mappings":"oNAIMA,EAAgBC,IAAOC,IAAV,sEAAGD,CAAH,oOA2BJE,EARF,SAACC,GACV,OACI,kBAACJ,EAAD,yB,YCtBFK,EAAsBJ,IAAOC,IAAV,sFAAGD,CAAH,oCAoBVK,EAZI,SAACF,GAChB,OACI,kBAACC,EAAD,KACKE,IAAMC,cACHJ,EAAMK,KACN,CAACL,GAFJ,YAGOA,EAAMM,aCP1BC,IAAQC,WAAWC,kBAEnB,IAAMC,EAAgBb,IAAOC,IAAV,2EAAGD,CAAH,8HAcnB,SAASc,EAAYX,GACnB,OACE,yBAAKY,UAAWZ,EAAMY,WACpB,kBAAC,EAAD,CAAYP,KAAK,MAAjB,WACA,0CAMS,SAASQ,EAAUb,GAGhCc,qBAAU,WAENP,IAAQQ,SAASC,OAAOC,SAASC,SAAWF,OAAOC,SAASE,UAE7D,IAIH,OACI,kBAAC,IAAD,CAAQF,SAAUjB,EAAMiB,SAAUG,MAHpB,0BAIZ,kBAAC,IAAD,CACEC,YAAY,iBACZC,KAAK,KACLF,MAAM,UACNG,KAAK,yBACLC,SAAU,CAAC,iBAAkB,mBAAoB,yBAEnD,kBAAC,EAAD,MACA,kBAACd,EAAD,CAAeE,UAAU,+BACvB,kBAACD,EAAD,CAAaC,UAAU,oBADzB","file":"component---src-pages-index-tsx-0148933f0a80750dd4b8.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\n\nconst HeroContainer = styled.div`\n  background-size: cover;\n  padding: 1px 0px 0px 0px;\n  position: relative;\n  margin-left: -33.33%;\n  margin-right: -33.33%;\n\n  .container-hero-image-background {\n    width: 100%;\n    height: 100%;\n\n    .hero-image-source {\n      height: 100%;\n      width: 100%;\n      object-fit: cover;\n    }\n  }\n`;\n\nconst Hero = (props) =>{\n    return (\n        <HeroContainer>\n            main image here\n        </HeroContainer>\n    );\n}\n\nexport default Hero;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst HeaderTextContainer = styled.div`\n\n    h3 {\n        text-decoration: underline;\n    }\n\n`;\n\nconst HeaderText = (props) => {\n    return (\n        <HeaderTextContainer>\n            {React.createElement(\n                props.type,\n                [props],\n                [...props.children]\n            )}\n        </HeaderTextContainer>\n    )\n}\n\nexport default HeaderText;","import React, { useEffect } from \"react\"\nimport styled from \"styled-components\";\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport ReactGA from 'react-ga';\n// import { graphql } from \"gatsby\";\n// import News from \"../components/news\";\nimport Hero from \"../components/hero\";\nimport HeaderText from \"../components/headerText\";\n\nReactGA.initialize(process.env.GOOGLE_ID);\n\nconst MainContainer = styled.div`\n  .overlay {\n    width: 50%;\n    padding: 75px 95px 75px 70px;\n    opacity: .9;\n    color: white;\n\n    @media(max-width:765px){\n      width:100%;\n      padding: 10px;\n    }\n  }\n`;\n\nfunction MainContent(props) {\n  return (\n    <div className={props.className}>\n      <HeaderText type=\"h3\">Welcome</HeaderText>\n      <p>stuff here\n      </p>\n    </div>\n  );\n}\n\nexport default function IndexPage(props) {\n // const news = props.data.news || \"\";\n\n  useEffect(() => {\n    if (typeof \"window\" !== \"undefined\") {\n      ReactGA.pageview(window.location.pathname + window.location.search);\n    }\n  }, [])\n\n  const siteTitle = \"Dreamcraft - Home Page\"\n\n  return (\n      <Layout location={props.location} title={siteTitle}>\n        <SEO\n          description=\"tiling in Utah\"\n          lang=\"en\"\n          title=\"Contact\"\n          meta=\"we work tiling in utah\"\n          keywords={[`tiling in utah`, 'cabinets in utah', 'cabinets and tiling']}\n        />\n        <Hero />\n        <MainContainer className=\"row position-relative w-100\">\n          <MainContent className=\"col-12 col-lg-6\"/>\n          NEWS\n          {/* <News className=\"col-12 col-lg-6\" news={news} /> */}\n        </MainContainer>\n      </Layout>\n  );\n}\n\n// export const pageQuery = graphql` query {\n  \n//     news: mdx(frontmatter: {path: {eq: \"news\"}}) {\n//       frontmatter {\n//         date(formatString: \"MMMM D,y\")\n//         description\n//         path\n//         title\n//       }\n//       body\n//     }\n// }\n\n// `;"],"sourceRoot":""}